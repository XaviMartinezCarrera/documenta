[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "",
    "text": "Programación web en entorno cliente\n\n1. Elaboración de documentos web mediante lenguajes de marca\n\n\n2. Desarrollo y reutilización de componentes software y multimedia mediante lenguajes de guión\n\n\n3. Aplicaciones técnicas de usabilidad y accesibilidad en el entorno cliente\n\n\n\n\n\n\nProgramación web en entorno servidor\n\n1. Desarrollo de aplicaciones web en el entorno servidor\n\n\n2. Acceso a datos en aplicaciones web del entorno servidor\n\n\n3. Desarrollo de aplicaciones web distribuidas\n\n\n\n\n\n\nImplantación de aplicaciones web en entorno internet, intranet y extranet\n\n\n\n\n\nMódulo de prácticas profesionales no laborales"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Curso",
    "section": "",
    "text": "Hola, soy Xavi Martínez Carrera, alumno del Curso de Programación.\n\nContenidos\nProgramación\nFront End\n  HTML | CSS | Javascript | Quarto | React\nBack End\n  Java | Spring Boot |\n  MOOC\n  Curso CodingTube\n  Curso TodoCode"
  },
  {
    "objectID": "lenguajes.html",
    "href": "lenguajes.html",
    "title": "Lenguajes",
    "section": "",
    "text": "Hola, soy Xavi Martínez Carrera, alumno del Curso de Programación.\n\nContenidos\nProgramación\nFront End - Back End\n  Java | HTML | CSS | Javascript | Quarto | React\n  MOOC\n  Curso CodingTube\n  Curso TodoCode"
  },
  {
    "objectID": "index.html#programación-web-en-entorno-cliente.",
    "href": "index.html#programación-web-en-entorno-cliente.",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "",
    "text": "Programación web en entorno servidor.\nImplantación de aplicaciones web en entorno internet, intranet y extranet.\nMódulo de práctivas profesionales no laborales.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#programación-web-en-entorno-servidor.",
    "href": "index.html#programación-web-en-entorno-servidor.",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Programación web en entorno servidor.",
    "text": "Programación web en entorno servidor.\n\n1. Desarrollo de aplicaciones web en el entorno servidor\n\n\n2. Acceso a datos en aplicaciones web del entorno servidor\n\n\n3. Desarrollo de aplicaciones web distribuidas\n\n\n\n\n\nImplantación de aplicaciones web en entorno internet, intranet y extranet\n\n\n\n\n\nMódulo de prácticas profesionales no laborales\n\n\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#implantación-de-aplicaciones-web-en-entorno-internet-intranet-y-extranet.",
    "href": "index.html#implantación-de-aplicaciones-web-en-entorno-internet-intranet-y-extranet.",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Implantación de aplicaciones web en entorno internet, intranet y extranet.",
    "text": "Implantación de aplicaciones web en entorno internet, intranet y extranet."
  },
  {
    "objectID": "index.html#módulo-de-práctivas-profesionales-no-laborales.",
    "href": "index.html#módulo-de-práctivas-profesionales-no-laborales.",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Módulo de práctivas profesionales no laborales.",
    "text": "Módulo de práctivas profesionales no laborales.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#módulo-de-prácticas-profesionales-no-laborales.",
    "href": "index.html#módulo-de-prácticas-profesionales-no-laborales.",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Módulo de prácticas profesionales no laborales.",
    "text": "Módulo de prácticas profesionales no laborales.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#implantación-de-aplicaciones-web-en-entorno-internet-intranet-y-extranet",
    "href": "index.html#implantación-de-aplicaciones-web-en-entorno-internet-intranet-y-extranet",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Implantación de aplicaciones web en entorno internet, intranet y extranet",
    "text": "Implantación de aplicaciones web en entorno internet, intranet y extranet"
  },
  {
    "objectID": "index.html#módulo-de-prácticas-profesionales-no-laborales",
    "href": "index.html#módulo-de-prácticas-profesionales-no-laborales",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Módulo de prácticas profesionales no laborales",
    "text": "Módulo de prácticas profesionales no laborales\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#programación-web-en-entorno-cliente",
    "href": "index.html#programación-web-en-entorno-cliente",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Programación web en entorno cliente",
    "text": "Programación web en entorno cliente\n\n1. Elaboración de documentos web mediante lenguajes de marca\n\n\n2. Desarrollo y reutilización de componentes software y multimedia mediante lenguajes de guión\n\n\n3. plicacione técnicas de usabilidad y accesibilidad en el entorno cliente"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": ":::",
    "text": ":::\n:::"
  },
  {
    "objectID": "index.html#programación-web-en-entorno-servidor",
    "href": "index.html#programación-web-en-entorno-servidor",
    "title": "Curso Desarrollo de Aplicaciones con Tecnología Web",
    "section": "Programación web en entorno servidor",
    "text": "Programación web en entorno servidor\n\n1. Desarrollo de aplicaciones web en el entorno servidor\n\n\n2. Acceso a datos en aplicaciones web del entorno servidor\n\n\n3. Desarrollo de aplicaciones web distribuidas\n\n\n\nImplantación de aplicaciones web en entorno internet, intranet y extranet\n\n\n\nMódulo de prácticas profesionales no laborales\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "mindset.html",
    "href": "mindset.html",
    "title": "Mindset",
    "section": "",
    "text": "AGILE\n\nPlanificar.\nEjecutar.\nRevisar.\nReflexionar.\n\n\n\nSCRUM\n\nInspección.\nAdaptabilidad.\nTransparencia.\n\n\n\n\n\nflowchart LR\n  A[Conceptos Core] --&gt; B(Microprogramación)\n  B --&gt; C{Decision}\n  C --&gt; D[Front End]\n  C --&gt; E[Back End]\n\n\n\n\n\n\n\n\n\nPath (Front End Developer)\nObjetivo: aprender y dominar los lenguajes básicos del front end y encontrar trabajo de programador front end en una empresa multinacional, aunque no descarto empezar en una empresa pequeña.\n\nTambién está ligado al marketing digital y al SEO. Es positivo tener conocimientos de HTML, CSS, JAVASCRIPT y diseño web.\n\n\n\n\n\nEstrategia 6 meses\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHTML\nCSS\nJavaScript\nReact\nJava\nSpringBoot\nGit\nProyecto\n\n\n\n\nDic 23\nDic 23\nDic 23\nEne 24\nDic 23\nMar 24\nEne 24\nEne 24\n\n\nJul 24\nJul 24\nJul 24\nJul 24\nJul 24\nJul 24\nJul 24\nJul 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nLos primeros 6 meses serán para aprender y asentar los conocimientos core de los lenguajes front y en menor medida los de back. También será necesario aprender sobre arquitectura, Git y bases de datos, y empezar a desarrollar mi proyecto personal:\n\nCursos Youtube.\nCurso CIFO La Violeta.\nCrear mi proyecto.\nCrear portfolio.\nPrácticas del curso (julio 2024).\nMétricas para compararme y observar mi evolución.\nEstar al día de herramientas informáticas.\nMindset: planificación semanal de mis tareas, no desesperarme, ser positivo, copiar proyectos para aprender.\n\n\n\n\n\nEstrategia 2 años\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHTML\nCSS\nJavaScript\nReact\nJava\nSpringBoot\nGit\nProyecto\n\n\n\n\nDic 23\nDic 23\nDic 23\nEne 24\nDic 23\nMar 24\nEne 24\nEne 24\n\n\nDic 25\nDic 25\nDic 25\nDic 25\nDic 25\nDic 25\nDic 25\nDic 25\n\n\n\n\n\n\n\n\n\n\n\n\n\nPasados los primeros 6 meses será necesario seguir ampliando conocimientos, seguir practicando con los lenguajes básicos ya aprendidos y profundizar en temas relacionados (Tailwind, Bootstrap, SASS, Material UI, TypeScript, Firebase).\n\nMás cursos Youtube.\nPosibilidad de hacer un Bootcamp.\nPosibilidad de realizar prácticas en el extranjero (Programa Erasmus Plus).\nSeguir desarrollando mi proyecto.\nSeguir desarrollando mi portfolio.\nEstar al día de herramientas informáticas.\nMindset: planificación semanal de mis tareas, no desesperarme, ser positivo, copiar proyectos para aprender.\nInvestigar empresas donde trabajen programadores.\nEstudiar ofertas de empleo (ver qué piden).\nContactar con programadores profesionales y gente involucrada en el mundo de la programación."
  },
  {
    "objectID": "arquitecturaweb.html",
    "href": "arquitecturaweb.html",
    "title": "Arquitectura Web",
    "section": "",
    "text": "Entorno Cliente - Servidor\n\n\n\nMVC Modelo Vista Controlador\n\n\nModel\n\nAlmacena y administra datos.\nBase de datos y respectiva capa de acceso a datos.\n\n\n\nView\n\nInterfaz gráfica del usuario.\nContiene todas las funcionalidades que interactúan con el usuario.\nRepresentación visual de la información.\n\n\n\nController\n\nConecta el modelo y la vista según sea necesario.\nSe encarga de traducir lo que el usuario haya introducido a través de la vista.\nAplica la lógica de negocios necesaria.\nActualiza o devuelve la información desde el modelo.\n\n\n\n\nLifecycle Software\n\nPlanning.\nDesign.\nTest.\nDevelop.\nMaintain.\nDeploy.\n\n\n\nProceso de creación de una app\nWHY | WHAT | FOR WHAT | HOW\n\nProject\n\nResearch.\nDocument.\nMock up.\nTree-Folder.\nVersion (Tech Stack).\nGIT.\n\n\n\nDomains (SRC)\n\nUnderstand needs.\nDDD.\nEscalabilidad (el código crece).\nCreatividad.\n\n\n\nUML / Pseudocode\n\nSandbox.\nMermaid.\nDiagrama temporal.\nDiagrama de clases.\nFlux.\n\n\n\nCode\n\nTDD.\nDevelopment / Production."
  },
  {
    "objectID": "proyectopersonal.html",
    "href": "proyectopersonal.html",
    "title": "Proyecto Personal",
    "section": "",
    "text": "App para Músicos (Ideas)\nMúsicos que buscan grupo para tocar.\nGrupos que buscan músicos.\nCrear tu propio perfil de músico.\nBúsqueda por estilo musical.\nBúsqueda por instrumento.\nBúsqueda geográfica.\n\n\nIntroducción\nAplicación enfocada al mundo de la música, cuyo objetivo es facilitar el proceso de poner en contacto a músicos con grupos. Las relaciones se establecen en base a ubicación, intereses musicales y objetivos. Fomenta la creación de bandas musicales mediante búsquedas personalizadas y tablón de anuncios.\n\n\nModelo\nModelo de la app. Músicos, grupos y relaciones u objetivos que se establecen entre ellos.\n\n\n\nMúsico\nGrupo\n\n\n\n\nNombre\nNombre\n\n\nEdad\nEdad de los componentes\n\n\nPoblación\nPoblación\n\n\nInstrumentos/s que toca\nEstilo musical\n\n\nEstilo musical\n¿Qué músico busca?\n\n\nInfluencias / Grupos de referencia\nObjetivos\n\n\nNivel musical\nLugar de ensayo\n\n\nObjetivos\n\n\n\n\n\n\n\nPosibles relaciones\n\n\n\n\nMúsico busca grupo\n\n\nGrupo busca músico\n\n\nMúsico busca músico\n\n\nGrupo busca grupo\n\n\n\n\n\nDiagrama de caso de uso\n\n\n\n\nflowchart LR\n  A(Músico o Grupo) --&gt; B(Iniciar sesión)\n  B --&gt; C(Buscar grupo)\n  C --&gt; D(Enviar mensaje)\n  B --&gt; E(Buscar músico)\n  E --&gt; F(Enviar mensaje)\n  B --&gt; G(Crear publicación)\n  B --&gt; H(Comentar publicación)\n  B --&gt; I(Configuración perfil)\n  I --&gt; J(Cambiar datos)\n  I --&gt; L(Activar notificaciones)"
  },
  {
    "objectID": "backend.html",
    "href": "backend.html",
    "title": "Back End",
    "section": "",
    "text": "Lenguaje orientado a objetos | Servidor\n\nJava es un lenguaje de programación ampliamente utilizado para codificar aplicaciones web.\nHa sido una opción popular entre los desarrolladores durante más de dos décadas, con millones de aplicaciones Java en uso en la actualidad.\nJava es un lenguaje multiplataforma, orientado a objetos y centrado en la red que se puede utilizar como una plataforma en sí mismo.\nEs un lenguaje de programación rápido, seguro y confiable para codificarlo todo, desde aplicaciones móviles y software empresarial hasta aplicaciones de macrodatos y tecnologías del servidor.\nEn Java tenemos 3 lógicas: programa, usuario y base de datos (SQL).\nClases:\n\nFuncionales: managers y controllers (son métodos estáticos).\nEntidades: modelos y hashmaps (son métodos no estáticos).\n\nMétodos:\n\nNo estáticos: necesitamos un objeto para ejecutarlos.\nEstáticos: no necesitamos un objeto para ejecutarlos.\n\nEstructura básica de una clase de Java:\n\npublic class MiClase {\n    // Campos (variables)\n    private int miCampoEntero;\n    private String miCampoString;\n\n    // Constructor\n    public MiClase(int miCampoEntero, String miCampoString) {\n        this.miCampoEntero = miCampoEntero;\n        this.miCampoString = miCampoString;\n    }\n\n    // Métodos\n    public void metodo1() {\n        // Implementación del método 1\n    }\n\n    public int metodo2() {\n        // Implementación del método 2\n        return 0;\n    }\n\n    // Otros métodos y/o miembros de la clase\n}\n\n\n\n\n\n\n\n\n\n\n\nSoftware Core Tools\nDevelopment Tools\nDeveloper Tools\nDevOps & App Lifecycle\n\n\n\n\nJava SE\nMaven\nIntelliJIdea\nSandbox\n\n\nJDK 21\nPom.xml\nIntelliJIdea Debugger\nAgile / SCRUM\n\n\nOpen JDK\nLombok\nGit / GitHub\nLinux 21.3\n\n\nSpring Boot\nJUnit\nMermaid (UML)\n\n\n\n\nJava Faker\nDocumentation (Quarto)\n\n\n\n\n\n\n\n\nFramework\n\nJava Spring Boot (Spring Boot) es una herramienta que acelera y simplifica el desarrollo de microservicios y aplicaciones web con Spring Framework.\nFunciones principales:\n\nConfiguración automática.\nEnfoque de configuración obstinado.\nCapacidad de crear aplicaciones autónomas."
  },
  {
    "objectID": "frontend.html",
    "href": "frontend.html",
    "title": "Front End",
    "section": "",
    "text": "Markdown | Documentación\n\nQuarto es un entorno de trabajo que facilita estructurar un documento que reúna las salidas, tanto gráficas como de texto, junto con el código que las genera. Este entorno se basa en el lenguaje markdown.\nQuarto coge un md (texto plano) y lo transforma en HTML para publicarlo.\nProceso de publicación: md – (Pandoc) – html – (Git) – GitHub – (GitHubPages) – Publicación\n\n\n\n\n\nLenguaje de marcas | Esqueleto de la web\n\nHTML, acrónimo en inglés de HyperText Markup Language, hace referencia al lenguaje de marcado utilizado en la creación de páginas web. Este estándar que sirve de referencia del software que interactúa con la elaboración de páginas web en sus diferentes versiones.\n\n\n\n\n\nEstilos | Colores\n\nCSS, en español «Hojas de estilo en cascada», es un lenguaje de diseño gráfico para definir y crear la presentación de un documento estructurado escrito en un lenguaje de marcado.\nSelectores básicos:\n\nDe tipo.\nDe clase.\nDe id,\nDe atributo.\nUniversales.\n\nCombinadores:\n\nDe hermanos adyacentes.\nGeneral de hermanos.\nDe hijo.\nDescendientes.\nDe column.\n\nPseudoclases.\nPseudoelementos.\nW3-CSS, Bootstrap, SASS.\n\n\n\n\n\nInteractividad\n\nJavaScript es un lenguaje de programación interpretado, dialecto del estándar ECMAScript. Se define como orientado a objetos, ​ basado en prototipos, imperativo, débilmente tipado y dinámico.\nJavaScript moderno: ECMA ES6.\n\n\n\n\n\nLibrería de Javascript | Interfaces de usuario\n\nReact es una biblioteca Javascript de código abierto diseñada para crear interfaces de usuario con el objetivo de facilitar el desarrollo de aplicaciones en una sola página. Es mantenido por Facebook y la comunidad de software libre. En el proyecto hay más de mil desarrolladores libres.\nPrincipales características:\n\nSPA (Single Page Application)\nLenguaje orientado a componentes.\nComponentes puros.\nCiclo de Render.\nTrigger.\nVirtual DOM (Document Object Model).\nJSX: mezcla entre HTML y JavaScript.\nEstados.\nProps.\nRouting.\nHooks.\n\nCrear un Proyecto React:\n\nnpx create-react-app my-app\n\nIniciar un Proyecto React:\n\nnpm start\n\nEstructura de un Proyecto React (Dominios):\n\nAssets.\nLayouts.\nComponents.\nPages.\nMiddleware.\nRoutes.\nConfig.\nServices.\nUtils.\n\n\n\nEstructura básica de un Componente React:\n\nimport React from 'react';\n\nfunction MiComponente(props) {\n  // Lógica de negocio\n\n  return (\n    &lt;&gt;\n      {/* Contenido JSX que representa el componente */}\n    &lt;/&gt;\n  );\n}\n\nexport default MiComponente;"
  },
  {
    "objectID": "vocabulario.html",
    "href": "vocabulario.html",
    "title": "Vocabulario",
    "section": "",
    "text": "Nombre\nDefinición\n\n\n\n\nGIT\nSistema de gestión de versiones.\n\n\nFORQUEAR\nBifurcar / Variaciones de máster.\n\n\nCRON\nHerramienta de Linux para temporizar trabajo.\n\n\nFLAMESHOT\nHerramienta para pantallazos.\n\n\nUML\nLenguaje unificado de modelado.\n\n\nAPI REST\nTransferencia de estado representacional.\n\n\nJPA\nJava Persistence API.\n\n\nMVC\nModelo Vista Controlador.\n\n\nMAVEN\nGestor de dependencias de Java.\n\n\nNPM\nGestor de dependencias de JavaScript.\n\n\nTIMESHIFT\nPara realizar copias de seguridad.\n\n\nG PARTED\nPara realizar particiones.\n\n\nNEXT CLOUD\nPara crear tu cloud personal.\n\n\nLATENCIA\nRetardo.\n\n\nDDD\nDiseñar pensando en dominios.\n\n\nMULTI-TIER ARCHITECTURE\nArquitectura multicapas.\n\n\nPATRONES DE DISEÑO\nSoluciones habituales a problemas comunes en el diseño de software.\n\n\nPATTERN\nLa manera en la que se implementa la arquitecura (súper protocolo).\n\n\nGRADLE\nGestor de dependencias de Java.\n\n\nMERMAID\nHerramienta para crear UMLs.\n\n\nJAVA HIPSTER\nSoftware que crear todo automáticamente.\n\n\nLOMBOK\nSimplifica las clases de Java.\n\n\nJDK\nJava Development Kit.\n\n\nJRE\nJava Runtime Environment.\n\n\nCI CD\nContinuous Integration and Continuous Delivery / Continuous Deployment.\n\n\nPIPELINE\nGrupo de procesos automatizados que permite compilar, buildear y desplegar código a sus plataformas de producción.\n\n\nNETLIFY\nPublicador de webs.\n\n\nWORKING DIRECTORY\nArchivos y carpetas en local, la carpeta que abres en el editor de código.\n\n\nAGILE\nConjunto de técnicas aplicadas en ciclos de trabajo cortos, con el objetivo de que el proceso de entrega de un proyecto sea más eficiente.\n\n\nSCRUM\nMarco de gestión de proyectos. Sprint planning, daily scrum, sprint review, sprint retrospective y sprint grooming o refinement.\n\n\nDEVOPS\nSoftware development and operations.\n\n\nINMUTABILIDAD\nObjeto cuyo estado no puede ser modificado una vez creado.\n\n\nBASH\nBourne Again Shell.\n\n\nHTML\nHypertext Markup Language.\n\n\nCSS\nCascading Style Sheets.\n\n\nPANDOC\nConversor de documentos libre y de código abierto.\n\n\nSNAPSHOT\nCopia o instantánea del estado actual de los datos de tu servidor.\n\n\nCLI\nCommand-Line Interface.\n\n\nHASHMAP\nEstructuras de datos donde los valores se insertan indexados por una clave, y se accede a ellos a través de la misma clave.\n\n\nMOCK UP\nMontaje que simula el resultado de un producto y que sirve para obtener la aprobación del cliente o consumidor final.\n\n\nSCOPE\nÁmbito, contexto que pertenece a un nombre dentro de un programa.\n\n\nJSX (REACT)\nMezcla entre HTML y JavaScript.\n\n\nJSON\nJavaScript Object Notation.\n\n\nNVM\nNode Version Manager.\n\n\nNODE\nMotor de JavaScript.\n\n\nNPX\nComando para crear un proyecto React.\n\n\nHOOK (REACT)\nPara gestionar los estados.\n\n\nENTIDAD\nLa expresión del dato según el contexto.\n\n\nPARSING\nTransformador de formatos, analizar y convertir un programa en un formato interno que un entorno de ejecución pueda realmente ejecutar.\n\n\nDRY\nDon’t Repeat Yourself.\n\n\nDEBUG\nProceso de detección de fallos de software.\n\n\nJUNIT\nFramework open spurce para la automatización de las pruebas (tanto unitarias, como de inegración) en los proyectos software.\n\n\nJAVA FAKER\nLibrería usada para generar fake data.\n\n\nTDD\nTest-Driven Development.\n\n\nCRUD\nCreate-Read-Update-Delete.\n\n\nAPT\nAdvanced Packaging Tool.\n\n\nPSEUDOCÓDIGO\nForma de representar código, como algoritmos, funciones y otros procesos, utilizando una combinación de lenguaje natural y elementos similares al lenguaje de programación.\n\n\nAXIOS\nLibrería de JavaScript que se utiliza para hacer solicitudes HTTP desde el navegador o desde un servidor usando Node.js.\n\n\nCASTING (JAVA)\nConvertir un tipo de variable a otro.\n\n\nDESACOPLAR\nSeparar al máximo el ćodigo.\n\n\nHASH (GIT)\nID de un commit.\n\n\nWRAPPER\nProgramas o códigos que rodean otros componentes de programa.\n\n\nDEUDA TÉCNICA\nTrabajo de producto diferido, a menudo como consecuencia de decisiones tomadas por los desarrolladores para favorecer la rapidez en detrimento de la calidad.\n\n\nJENKINS\nHerramienta para crear pipelines."
  },
  {
    "objectID": "vocabulario.html#getting-up",
    "href": "vocabulario.html#getting-up",
    "title": "Vocabulario",
    "section": "Getting up",
    "text": "Getting up\n\nTurn off alarm\nGet out of bed"
  },
  {
    "objectID": "vocabulario.html#breakfast",
    "href": "vocabulario.html#breakfast",
    "title": "Vocabulario",
    "section": "Breakfast",
    "text": "Breakfast\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "gitgithub.html",
    "href": "gitgithub.html",
    "title": "Git-Git Hub",
    "section": "",
    "text": "AUTENTICACIÓN\n\nGit config user.name.\nGit config user.email.\n\n\n\nTRIPLE AUTENTICACIÓN\n\nGit Hub.\nVS Code.\nGit.\n\n\n\nGIT STATUS\nMuestra el estado del directorio de trabajo y del área del entorno de ensayo.\n\n\nGIT INIT\nConfiguración ninicial de un repositorio nuevo.\n\n\nGIT ADD\n\nSubir tus documentos al repositorio local de Git.\nSubir solo los que me interesan.\nCada vez que creo uno nuevo (Git add).\n\n\n\nGIT COMMIT\nCaptura una instantánea de los cambios preparados en ese momento del proyecto.\n\n\nGIT PUSH\nSubirlo a Git Hub.\n\n\nGIT DIFF\nPara ver los cambios que vas haciendo en tu archivo.\n\n\nGIT RESTORE\nPara descartar cambios o volver al inicio.\n\n\nGIT REVERT\nPara deshacer cambios.\n\n\nGIT RESET\nPara restablecer tu estado actual a uno específico.\n\n\nGIT LOG\nPara ver los commits.\n\n\nGIT SWITCH\nPermite moverse entre ramas.\n\n\nGIT BRANCH\nPermite crear una rama nueva.\n\n\nGIT CHECKOUT\nPermite desplazarse entre las ramas creadas por Git branch.\n\n\nGIT STASH\nPara guardar cosas en borrador.\n\n\nGIT BRANCH -R\nPara ver las ramas que tenemos.\n\n\nGIT LS-REMOTE\nLista referencias en un repositorio remoto.\n\n\nGIT REMOTE RM\nElimina una URL remota de tu repositorio."
  }
]